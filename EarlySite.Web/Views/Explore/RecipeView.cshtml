@using EarlySite.Model.Show;
@using EarlySite.Model.Common;
@model Recipes
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container corner">
    <div class="row">
        <div class="mod_data">
            <span class="data__cover">
                <img id="recipeImg" class="data__photo" src="data:image/png;base64,@Model.Cover" />
                <i class="data__cover_mask"></i>
            </span>
            <div class="data__cont">
                <div class="data__name">
                    <h1 class="data__name_txt" title="@Model.Name">@Model.Name</h1>
                </div>
                <div class="data__singer">
                    <i class="icon_singer sprite"></i>
                    <a class="data__singer_txt" href="@(Url.Action("Index","Profile")+"?phone="+Model.Phone)">@Model.Phone</a>
                </div>
                <ul class="data__info">
                    <li class="data_info__item">创建时间:@Model.UpdateDate.ToString("yyyy-MM-dd")</li>
                    <li class="data_info__item data_info__item--even">描述:@Model.Description</li>
                    <li class="data_info__item">是否公开:@(Model.IsPrivate ? "私有" : "公开")</li>
                    <li class="data_info__item data_info__item--even">标签:@Model.Tag</li>
                </ul>
                <div class="data__actions" role="toolbar">
                    @{
                        if (ViewBag.IsSelf)
                        {
                            <!--公开 设为私密 操作-->
                            <a class="mod_btn" href="">
                                <i class="@(Model.IsPrivate?"mod_btn__icon_yes":"mod_btn__icon_no")"></i>
                                @(Model.IsPrivate ? "公開する" : "私密にする")
                            </a>
                            <!--删除 操作-->
                            <a class="mod_btn" href="">
                                <i class="mod_btn__icon_delete"></i>
                                删除
                            </a>
                        }
                        else
                        {
                            <!--收藏操作-->
                            <a class="mod_btn mod_btn_red" href="javascript:toast('コレクション')">
                                <i class="mod_btn_green__icon_like"></i>
                                コレクション(收藏)
                            </a>
                        }
                    }
                    <!--评论操作-->
                    <!--<a class="mod_btn" href="">
                        <i class="mod_btn__icon_comment"></i>
                        评论(23)
                    </a>-->
                </div>
            </div>
        </div>
        <div class="detail_layout">
            @{
                IList<Dish> dishlist = (IList<Dish>)ViewBag.DishList;

                if (dishlist != null && dishlist.Count > 0)
                {
                    <div class="detail_layout__main">
                        <div class="mod_dishlist">
                            <ul class="dishlist__header">
                                <li class="dishlist__header_name">单品名称</li>
                                <li class="dishlist__header_shopname">店铺名称</li>
                                <li class="dishlist__header_price">单品价格</li>
                                <li class="dishlist__header_type">单品类型</li>
                                <li class="dishlist__header_meal">用餐时间</li>
                                <li class="dishlist__header_other"> </li>
                            </ul>
                            <ul class="dishlist__list">
                                @{
                                    for (int i = 0; i < dishlist.Count; i++)
                                    {
                                        var dishurl = Url.Action("DishView", "Explore") + "?dishId=" + dishlist[i].DishId;
                                        var shopurl = Url.Action("ShopView", "Explore") + "?shopId=" + dishlist[i].ShopId;
                                        <li>
                                            <div class="dishlist__item">
                                                <div class="dishlist__number">@(i + 1)</div>
                                                <div class="dishlist__name"><a href="@dishurl">@dishlist[i].Name</a></div>
                                                <div class="dishlist__shopname"><a href="@shopurl">@dishlist[i].ShopName</a></div>
                                                <div class="dishlist__price">$@dishlist[i].Price.ToString("0.00")</div>
                                                <div class="dishlist__type">@dishlist[i].TypeName</div>
                                                <div class="dishlist__meal">@dishlist[i].MealTimeName</div>
                                                <div class="dishlist__other"></div>
                                            </div>
                                        </li>
                                    }
                                }
                            </ul>
                        </div>
                    </div>
                }
            }

            <div class="detail_layout__other">
                <div class="other_part">
                    <h3 class="other_part__tit">相似食谱</h3>
                    <div class="mod_dishlist">
                        @{
                            IList<Shop> nearshop = (IList<Shop>)ViewBag.NearShop;

                            if (nearshop != null && nearshop.Count > 0)
                            {
                                <ul class="dishlist__list">
                                    @foreach (Shop item in nearshop)
                                    {
                                        var shopurl = string.Format("{0}?shopId={1}", Url.Action("ShopView", "Explore"), item.ShopId);

                                        <li class="dishlist__item">
                                            <div class="dishlist__item_box">
                                                <div class="dishlist__cover">
                                                    <a class="js_dishlist" href="@shopurl">
                                                        <img class="dishlist__pic" src="data:image/png;base64," alt="...">
                                                    </a>
                                                </div>
                                                <h4 class="dishlist__title">
                                                    <span class="dishlist__title_txt">
                                                        <a href="@shopurl">@item.ShopName</a>
                                                    </span>
                                                </h4>
                                            </div>
                                        </li>
                                    }
                                </ul>
                            }
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<script type="text/javascript">

    //地图显示图层
    var features = [];

    var scale = new AMap.Scale({
        visible: false
    }),
        toolBar = new AMap.ToolBar({
            visible: false
        }),
        overView = new AMap.OverView({
            visible: false
        }),
        map = new AMap.Map("mapContainer", {
            resizeEnable: true
        });

    features.push("bg");
    features.push("road");

    map.setFeatures(features);
    map.addControl(scale);
    map.addControl(toolBar);
    map.addControl(overView);
    var geolocation;

    map.plugin('AMap.Geolocation', function () {
        geolocation = new AMap.Geolocation({
            enableHighAccuracy: true,//是否使用高精度定位，默认:true
            timeout: 10000,          //超过10秒后停止定位，默认：无穷大
            buttonOffset: new AMap.Pixel(-40, -40),//定位按钮与设置的停靠位置的偏移量，默认：Pixel(10, 20)
            zoomToAccuracy: true,      //定位成功后调整地图视野范围使定位位置及精度范围视野内可见，默认：false
            buttonPosition: 'RB'
        });
        map.addControl(geolocation);
        geolocation.getCurrentPosition();
        AMap.event.addListener(geolocation, 'complete', onComplete);//返回定位信息
        AMap.event.addListener(geolocation, 'error', onError);      //返回定位出错信息
    });
    //隐藏地图logo
    map.on('complete', function () {
        $('.amap-logo').css('visibility', 'hidden');
        $('.amap-copyright').css('visibility', 'hidden');
    });


    //解析定位结果
    function onComplete(data) {

        var str = ['定位成功'];
        str.push('经度：' + data.position.getLng());
        str.push('纬度：' + data.position.getLat());
        if (data.accuracy) {
            str.push('精度：' + data.accuracy + ' 米');
        }//如为IP精确定位结果则没有精度信息
        str.push('是否经过偏移：' + (data.isConverted ? '是' : '否'));
        console.log(str);
    }

    //解析定位错误信息
    function onError(data) {
        console.log('定位失败');
    }


</script>
